// Generated by CoffeeScript 1.7.1
(function() {
  (function($, Backbone, Marionette, exports) {
    var App, Avanzu, BoxWidget, BoxWidgetModel, Controller, DashboardModule, SmallBoxWidget, SmallWidgetModel, WidgetCollection, WidgetList, WidgetModel;
    Avanzu = exports.Avanzu;
    App = Avanzu.Admin;
    WidgetModel = Avanzu.Models.BoxModel.extend({
      getView: function() {
        return this.defaultView;
      }
    });
    BoxWidgetModel = WidgetModel.extend({
      initialize: function() {
        this.defaultView = BoxWidget;
        return WidgetModel.prototype.initialize.call(this);
      }
    });
    SmallWidgetModel = WidgetModel.extend({
      initialize: function() {
        this.defaultView = SmallBoxWidget;
        return WidgetModel.prototype.initialize.call(this);
      }
    });
    WidgetCollection = Backbone.Collection.extend({
      initialize: function(args) {}
    });
    BoxWidget = Avanzu.Views.BoxView.extend({
      className: 'col-sm-4',
      initialize: function(args) {}
    });
    SmallBoxWidget = Avanzu.Views.SmallBoxView.extend({
      className: 'col-sm-4',
      initialize: function(args) {}
    });
    WidgetList = Marionette.CollectionView.extend({
      className: 'row',
      getChildView: function(item) {
        var _ref;
        return (_ref = item.defaultView) != null ? _ref : BoxWidget;
      }
    });
    Controller = Marionette.Controller.extend({
      initialize: function(module) {
        var cls, collection, i, model, _i;
        this.module = module;
        collection = new Backbone.Collection;
        for (i = _i = 1; _i <= 20; i = ++_i) {
          cls = ((i % 2) === 0 ? SmallWidgetModel : BoxWidgetModel);
          model = new cls({
            solid: (i % 2) === 0,
            color: 'maroon',
            title: "some title " + i,
            message: "some message... " + i,
            tile: (i % 2) === 0
          });
          collection.add(model);
        }
        return this.list = new WidgetList({
          collection: collection
        });
      },
      execute: function() {
        return this.module.region.show(this.list);
      }
    });
    DashboardModule = Marionette.Module.extend({
      onStart: function() {
        var controller;
        this.region = App.appContent;
        controller = new Controller(this);
        return controller.execute();
      },
      onStop: function() {
        return typeof console !== "undefined" && console !== null ? console.log('DashboardModule stopping') : void 0;
      }
    });
    return App.module('Dashboard', DashboardModule);
  })(jQuery, Backbone, Backbone.Marionette, window);

}).call(this);
